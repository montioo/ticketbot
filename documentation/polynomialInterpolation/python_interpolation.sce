x = [0 0.2 0.4 0.6 0.8 1.0 1.2 1.4 1.6 1.8 2.0 2.2 2.4 2.6 2.8 3.0 3.2 3.4 3.6 3.8 4.0 4.2 4.4 4.6 4.8 5.0 5.2 5.4 5.6 5.8 6.0 6.2 6.4 6.6 6.8 7.0 7.2 7.4 7.6 7.8 8.0 8.2 8.4 8.6 8.8 9.0 9.2 9.4 9.6 9.8 10.0 10.2 10.4 10.6 10.8 11.0 11.2 11.4 11.6 11.8 12.0 12.2 12.4 12.6 12.8 13.0 13.2 13.4 13.6 13.8 14.0 14.2 14.4 14.6 14.8 15.0 15.2 15.4 15.6 15.8 16.0 16.2 16.4 16.6 16.8 17.0 17.2 17.4 17.6 17.8 18.0 18.2 18.4 18.6 18.8 19.0 19.2 19.4 19.6 19.8 20.0 20.2 20.4 20.6 20.8 21.0 21.2 21.4 21.6 21.8 22.0 22.2 22.4 22.6 22.8 23.0 23.2 23.4 23.6 23.8 24.0]
y_1 = [1.5 1.4667 1.4333 1.4 1.3667 1.3333 1.3 1.2667 1.2333 1.2 1.1667 1.1333 1.1 1.0667 1.0333 1.0 1.225 1.45 1.675 1.9 2.125 2.35 2.575 2.8 3.025 3.25 3.475 3.7 3.925 4.15 4.375 4.6 4.825 5.05 5.275 5.5 5.4091 5.3182 5.2273 5.1364 5.0455 4.9545 4.8636 4.7727 4.6818 4.5909 4.5 4.4091 4.3182 4.2273 4.1364 4.0455 3.9545 3.8636 3.7727 3.6818 3.5909 3.5 3.4091 3.3182 3.2273 3.1364 3.0455 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 2.8 2.6 2.4 2.2 2.0 1.8 1.6 1.4 1.2 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0667 1.1333 1.2 1.2667 1.3333 1.4 1.4667 1.5333 1.6 1.6667 1.7333 1.8 1.8667 1.9333 2.0 1.9667 1.9333 1.9 1.8667 1.8333 1.8 1.7667 1.7333 1.7 1.6667 1.6333 1.6 1.5667 1.5333 1.5]
y_3 = [1.5 1.4501 1.4006 1.352 1.3047 1.2593 1.216 1.1754 1.1379 1.104 1.0741 1.0486 1.028 1.0127 1.0033 1.0 1.0326 1.126 1.2734 1.468 1.7031 1.972 2.2679 2.584 2.9136 3.25 3.5864 3.916 4.2321 4.528 4.7969 5.032 5.2266 5.374 5.4674 5.5 5.4903 5.4623 5.4172 5.3567 5.2821 5.1949 5.0965 4.9884 4.872 4.7487 4.62 4.4873 4.3522 4.2159 4.08 3.9459 3.8151 3.6889 3.5689 3.4564 3.353 3.26 3.1789 3.1112 3.0582 3.0215 3.0024 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 2.944 2.792 2.568 2.296 2.0 1.704 1.432 1.208 1.056 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0127 1.0486 1.104 1.1754 1.2593 1.352 1.4501 1.5499 1.648 1.7407 1.8246 1.896 1.9514 1.9873 2.0 1.9967 1.9873 1.972 1.9514 1.9259 1.896 1.8621 1.8246 1.784 1.7407 1.6953 1.648 1.5994 1.5499 1.5]



f=get("current_figure")
f.figure_position
f.figure_size=[1100, 600]

a = gca();
a.data_bounds = [0 24 0 6]
plot(x,y_1, 'colo', 'black')
plot(x,y_3)
plot(3,1, 'marker','x','colo', 'red');
legend(["Polynome ersten Grades", "Polynome dritten Grades", "Zu interpolierende Punkte"])
plot(7,5.5, 'marker','x','colo', 'red');
plot(12.5,3, 'marker','x','colo', 'red');
plot(14,3, 'marker','x','colo', 'red');
plot(16,1, 'marker','x','colo', 'red');
plot(18,1, 'marker','x','colo', 'red');
plot(21,2, 'marker','x','colo', 'red');
title("Beispiel meines Python Interpolationsmoduls mit Polynomen unterschiedlichen Grades")
xlabel("x-Achse")
ylabel("y-Achse")

xs2pdf(gcf(), "python_interpolation_example.pdf");
xgrid()
xs2pdf(gcf(), "python_interpolation_example_grid.pdf");
